import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';

// Define your base URL
const baseUrl = 'https://back.biopluskw.com/api/v1'; // Replace with your actual base URL

// Function to create request
const createRequest = (url) => ({ url });

// Create the API slice using RTK Query
export const clientSlice = createApi({
  reducerPath: 'clientSlice',
  baseQuery: fetchBaseQuery({
    baseUrl,
    prepareHeaders: (headers) => {
      // Get the token from localStorage (or Redux state)
      const token = localStorage.getItem('token');

      // If a token exists, add it to the headers
      if (token) {
        headers.set('Authorization', `Bearer ${token}`);
      }

      return headers;
    },
  }),

  endpoints: (builder) => ({
   
    getUsers: builder.query({
      query: ({ page, limit, status, search }) => ({
        url: '/admin/users',
        params: { page, limit, status, search }, // Pass page and limit as query parameters
      }),
    }),
    // You can add more endpoints here as needed
    getUserFamily: builder.query({
      query: (userId) => createRequest(`/admin/users/${userId}/family-members`),
    }),

    updateUser: builder.mutation({
      query: ({ id, data }) => ({
        url: `/admin/users/${id}/status`,
        method: 'PATCH',
        body: data,
      }),
    }),

    createUser: builder.mutation({
      query: (user) => ({
        url: '/admin/users',
        method: 'POST',
        body: user,
      }),
    }),

    updateUserProfile: builder.mutation({
      query: ({ id, data }) => ({
        url: `/admin/users/${id}/profile`,
        method: 'PATCH',
        body: data,
      }),
    }),
  }),
});

// Export hooks generated by the API service
export const {
  useGetUsersQuery,
  useGetUserFamilyQuery,
  useUpdateUserMutation,
  useCreateUserMutation,
  useUpdateUserProfileMutation,
} = clientSlice;
